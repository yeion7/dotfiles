sketh,v
Plugin 'jslint.vim',V
.,v
;,v
suma,v
function suma :,V
import test from 'tape';,V
false,v
    "es5"           : true,      // true: Allow ES5 syntax (ex: getters and setters),V
{// Settings"passfail"      : false,  // Stop on first error."maxerr"        : 100,    // Maximum error before stopping.// Predefined globals whom JSHint will ignore."browser"       : true,   // Standard browser globals e.g. `window`, `document`."node"          : false,"rhino"         : false,"couch"         : false,"wsh"           : true,   // Windows Scripting Host."jquery"        : true,"ender"         : true,"prototypejs"   : false,"mootools"      : false,"dojo"          : false,"predef"        : [  // Custom globals.//"exampleVar",//"anotherCoolGlobal",//"iLoveDouglas"],// Development."debug"         : false,  // Allow debugger statements e.g. browser breakpoints."devel"         : true,   // Allow developments statements e.g. `console.log();`.// ECMAScript 5."es6"           : true,   // Allow ECMAScript 5 syntax."strict"        : false,  // Require `use strict` pragma  in every file."globalstrict"  : false,  // Allow global "use strict" (also enables 'strict').// The Good Parts."asi"           : true,  // Tolerate Automatic Semicolon Insertion (no semicolons)."laxbreak"      : true,   // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons."bitwise"       : true,   // Prohibit bitwise operators (&, |, ^, etc.)."boss"          : false,  // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments."curly"         : true,   // Require {} for every new block or scope."eqeqeq"        : true,   // Require triple equals i.e. `===`."eqnull"        : false,  // Tolerate use of `== null`."evil"          : false,  // Tolerate use of `eval`."expr"          : false,  // Tolerate `ExpressionStatement` as Programs."forin"         : false,  // Tolerate `for in` loops without `hasOwnPrototype`."immed"         : true,   // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`"latedef"       : true,   // Prohipit variable use before definition."loopfunc"      : false,  // Allow functions to be defined within loops."noarg"         : true,   // Prohibit use of `arguments.caller` and `arguments.callee`."regexp"        : true,   // Prohibit `.` and `[^...]` in regular expressions."regexdash"     : false,  // Tolerate unescaped last dash i.e. `[-...]`."scripturl"     : true,   // Tolerate script-targeted URLs."shadow"        : false,  // Allows re-define variables later in code e.g. `var x=1; x=2;`."supernew"      : false,  // Tolerate `new function () { ... };` and `new Object;`."undef"         : true,   // Require all non-global variables be declared before they are used.// Personal styling preferences."newcap"        : true,   // Require capitalization of all constructor functions e.g. `new F()`."noempty"       : true,   // Prohibit use of empty blocks."nonew"         : true,   // Prohibit use of constructors for side-effects."nomen"         : true,   // Prohibit use of initial or trailing underbars in names."onevar"        : false,  // Allow only one `var` statement per function."plusplus"      : false,  // Prohibit use of `++` & `--`."sub"           : false,  // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`."trailing"      : true,   // Prohibit trailing whitespaces."white"         : false,  // Check against strict whitespace and indentation rules."indent"        : 2       // Specify indentation spacing},V
{,V
"ender"         : true,,V
let g:syntastic_javascript_jslint_args = "--white --nomen --regexp --browser --devel --windows --sloppy --vars --es6:true",V
t,v
let g:syntastic_javascript_jslint_args = "--white --nomen --regexp --browser --devel --windows --sloppy --vars",V
,V
let g:syntastic_javascript_jslint_exec = '~/.vim/bundle/jslint.vim/bin/jslint',V
'/.vim/bundle/jslint.vim/bin/,v
~/.vim/jslint.vim,v
 {'name':'jslint.vim'},v
var = ala ,V
 answer these questions:,V
 For each unit test you write,,V
//,v
 ,v
// For each unit test you write,,V
var test = require('tape');,V
test('timing test', function (t) {,V
  t.plan(2);,V
  t.equal(typeof Date.now, 'function');,V
    var start = Date.now();,V
  setTimeout(function () {,V
    t.equal(Date.now() - start, 100);,V
            }, 100);,V
});,V
test('beep boop', function (t) {  t.plan(2);  t.equal(1 + 1, 2);  setTimeout(function () {    t.deepEqual(        'ABC'.toLowerCase().split(''),        ['a','b','c']        );    });});,V
  window.addEventListener('load', function() {    new StickyNotesApp();  });,V
prueba,V
  StickyNote.TEMPLATE =    '<div class="message"></div>'+    '<div class="date"></div>'+    '<button class="delete mdl-button mdl-js-button mdl-js-ripple-effect">'+    ' Delete'+    '</button>';prueba  //StickyNote.CLASSES = ['mdl-cell--4-col-desktop', 'mdl-card__supporting-text', 'mdl-cell--12-col',                          'mdl-shadow--2dp', 'mdl-cell--4-col-tablet', 'mdl-card', 'mdl-cell', 'sticky-note'];,V
  StickyNote.CLASSES = ['mdl-cell--4-col-desktop', 'mdl-card__supporting-text', 'mdl-cell--12-col',,V
Plugin 'The-NERD-Commenter',V
Nerd,v
A,V
dd,V
A,1
node_modules,v
maquetacion/node_modules/,V
mockup,v
),v
  "retainLines": true,V
  "only": "gulpfile.babel.js",,V
  // Remove the line below to enable ES2015 support.,V
        },V
          var dddate = new Date();,V
/,v
console.log(ages);,V
console.log(byCentury);,V
    ages[index].concat(person.died-person.born);,V
    var index = Math.ceil(person.died/100);,V
ancestry.forEach(function(person){,V
var ages = {};,V
+,v
forEach,v
    if (ages.index),V
         ages.index = (person.died-person.born);,V
    else,V
        reddturn ages.index = person.died-person.born;,V
return,v
push,v
        return ages.index.push(person.died-person.born);,V
    retuddrn ages[Math.ceil(person.died /100)] = [person.died-person.born];,V
    console.log(ages);,V
console.log(Math.ceil(1809/100));,V
console.log(ages.reduce(function(a,b){,V
    return a+b;,V
})/ages.length);,V
function ages(array){,V
};,V
    if arraddddy.,V
age,V
console.log(byName);,V
console.log(ancestry.filter(isInSet.bind(null,theSet)));,V
function isInSet(set, person){    return set.indexOf(person.name) > -1;},V
var theSet = ["Carel Haverbeke", "Maria van Brussel", "Donald Duck"];,V
console.log(arrays.concat([12]));,V
console.log(ancestry.filter(function(person){,V
}));,V
    return isInSet(theSet, person);,V
console.log(longLivingPercentage(byName["Emile Haverbeke"]));,V
all,v
(,v
a,v
var ph = byName["Philibert Haverbeke"];,V
console.log(reduceAncestors(ph, sharedDNA, 0) / 4);,V
=,v
},V
    return valueFor(person);,V
    },V
                    valueFor(byName[person.father]));,V
            return f(person, valueFor(byName[person.mother]),,V
